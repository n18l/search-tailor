@import "reset";
@import "inputs";

:root {
    --color-entry-container: hsla(240, 3%, 25%, 1);
    --color-entry: hsla(240, 3%, 30%, 1);

    --color-button: hsl(240, 3%, 37%);
    --color-button-highlight-1: hsl(240, 2%, 44%);
    --color-button-highlight-2: hsl(240, 2%, 49%);

    --color-text-input: hsla(0, 0%, 100%, 1);
    --color-text-input-bg: hsla(0, 0%, 40%, 1);
    --color-text-input-effects: hsl(200, 100%, 50%);
    --color-text-input-invalid: hsl(0, 75%, 60%);

    --color-background-icon-fill: hsla(0, 100%, 100%, 0.75);
    --color-border-icon-fill: hsla(0, 100%, 100%, 0.75);

    --color-icon-fill: hsla(0, 100%, 100%, 0.75);

    --color-domain-token-active: hsla(215, 65%, 50%, 0.5);
    --color-domain-token-border: hsla(0, 0%, 70%, 1);
    --color-domain-token-text: hsla(0, 0%, 100%, 1);
    --color-domain-token-remove-active: hsla(0, 45%, 60%, 1);
    --color-domain-token-remove-text: hsla(0, 0%, 100%, 1);
}

html,
body {
    background-color: var(--color-entry);
    border-radius: 2px;
    font-family: sans-serif;
    font-size: 10px;
    overflow: hidden;
}

main {
    color: hsl(0, 0%, 100%);
    display: flex;
    flex-direction: column;
    height: 100vh;
    padding-top: 5px;
    position: relative;
}

.entry-group-container {
    max-height: 400px;
    overflow: scroll;
    padding-top: 5px;
    position: relative;
    z-index: 1;
}

.entry-group {
    $this-entry-group: &;

    background-color: hsl(240, 3%, 30%);

    // .entry-group__header
    &__header {
        $header-height: 40px;

        align-items: center;
        background-color: hsl(240, 2%, 23%);
        display: flex;
        height: $header-height;
        padding-left: 10px;

        // .entry-group__header__icon
        &__icon {
            display: none;

            @each $treatmentType in ("screen", "suppress", "spotlight") {
                // .entry-group__header__icon--screen
                // .entry-group__header__icon--suppress
                // .entry-group__header__icon--spotlight
                &--#{$treatmentType} {
                    #{$this-entry-group}[data-treatment-id^="#{$treatmentType}"]
                        & {
                        display: block;
                    }
                }
            }
        }

        // .entry-group__header__title
        &__title {
            font-size: 1.2rem;
            margin: 0 6px 0 10px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        // .entry-group__header__action-container
        &__action-container {
            display: flex;
            height: 100%;
            margin-left: auto;
        }

        // .entry-group__header__action
        &__action {
            $this-action: &;

            align-items: center;
            display: flex;
            justify-content: center;
            width: $header-height;

            &[disabled] {
                cursor: not-allowed;
                opacity: 0.5;
            }

            &:not([disabled]) {
                &:hover,
                &:focus {
                    background-color: hsla(0, 0%, 100%, 0.2);
                }

                &:active {
                    background-color: hsla(0, 0%, 100%, 0.4);
                }
            }

            &[data-action-active="true"] {
                background-color: var(--color-button);
            }

            // .entry-group__header__action__icon
            &__icon {
                transition: transform 0.5s;

                #{$this-action}[data-click-action="toggleSettingsDrawer"][data-action-active="true"]
                    & {
                    transform: rotate(150deg);
                }
            }
        }
    }

    // .entry-group__settings-drawer
    &__settings-drawer {
        background-color: var(--color-button);
        display: none;
        height: 65px;

        &[data-is-open="true"] {
            display: flex;
        }
    }

    // .entry-group__input-container
    &__input-container {
        background-color: var(--color-text-input-bg);
        border-radius: 2px;
        flex: 1 1 100%;
        display: flex;
        margin: 15px;
        position: relative;
        overflow: hidden;
    }

    // .entry-group__label-input
    &__label-input {
        padding: 0 0 0 8px;
        height: 100%;
        width: 100%;
        margin: auto;
    }

    // .entry-group__label-input-effects
    // The input effects element is used to provide performantly animated states
    // by only transitioning properties that don't trigger repaints (i.e. scale,
    // opacity, position, & rotation).
    &__label-input-effects {
        height: 100%;
        width: 100%;
        position: absolute;
        border-radius: 2px;
        overflow: hidden;
        pointer-events: none;

        &::before,
        &::after {
            bottom: 0;
            content: "";
            height: 2px;
            left: 0;
            position: absolute;
            width: 100%;
        }

        &::before {
            background-color: var(--color-text-input-effects);
            transform: scaleX(0);
            transition: transform 0.35s;

            #{$this-entry-group}__label-input:focus + &,
            #{$this-entry-group}__label-input:active + & {
                transform: scaleX(1);
            }
        }

        &::after {
            background-color: var(--color-text-input-invalid);
            opacity: 0;
            transition: opacity 0.35s;

            #{$this-entry-group}__label-input:invalid + & {
                opacity: 1;
            }
        }
    }

    // .entry-group__action-container
    &__action-container {
        display: flex;
        margin-left: auto;
    }

    // .entry-group__action
    &__action {
        --color-button-hover: hsla(240, 2%, 49%, 1);

        $this-action: &;
        width: 60px;
        display: flex;
        position: relative;

        &:hover,
        &:focus,
        &:active {
            background-color: var(--color-button-hover);
        }

        &::before {
            content: "";
            width: 1px;
            height: 45px;
            position: absolute;
            top: 50%;
            left: 0;
            transform: translateY(-50%);
            background-color: var(--color-button-hover);

            #{$this-action}:hover + &,
            #{$this-action}:focus + &,
            #{$this-action}:active + & {
                display: none;
            }
        }

        // .entry-group__action__icon
        &__icon {
            margin: auto;

            // .entry-group__action__icon__path-1
            &__path-1 {
                fill: var(--color-icon-fill);
            }

            // .entry-group__action__icon__path-2
            &__path-2 {
                [data-click-action="showBackgroundColorModal"] & {
                    fill: var(--color-background-icon-fill);
                }

                [data-click-action="showBorderColorModal"] & {
                    fill: var(--color-border-icon-fill);
                }
            }
        }
    }

    // .entry-group__list
    &__list {
        padding: 0;
        margin: 0;

        &:empty {
            &::after {
                align-items: center;
                content: "Add new or drag existing entries here to apply this treatment.";
                display: flex;
                font-size: 1.2rem;
                height: 65px;
                opacity: 0.7;
                padding: 0 100px;
                text-align: center;
            }
        }
    }

    // .entry-group__picker-modal
    &__picker-modal {
        height: 100vh;
        left: 0;
        position: fixed;
        top: 0;
        width: 100vw;

        &:not([data-is-visible="true"]) {
            display: none;
        }
    }

    // .entry-group__picker-scrim
    &__picker-scrim {
        background-color: hsla(0, 0%, 0%, 0.5);
        height: 100vh;
        left: 0;
        position: absolute;
        top: 0;
        width: 100vw;
    }

    // .entry-group__picker
    &__picker {
        left: 50%;
        position: absolute;
        top: 50%;
        transform: translate(-50%, -50%);
    }
}

.entry-container {
    background-color: var(--color-entry-container);
    flex: 1 1 auto;
    max-height: 400px;
    overflow: scroll;
    position: relative;
    z-index: 1;
}

.entry {
    $thisEntry: &;

    background-color: var(--color-entry);
    border-top: 1px solid var(--color-button);
    display: flex;
    flex-direction: column;

    &__primary-ui {
        display: flex;
    }

    &__sort-handle {
        align-self: center;
        cursor: move;

        &__icon {
            display: block;
        }
    }

    &__input-container {
        background-color: var(--color-button);
        border-radius: 2px;
        flex: 1 1 100%;
        margin: 15px;
        margin-left: 2px;
        position: relative;
        overflow: hidden;
    }

    &__domain-input {
        padding: 0 0 0 8px;
        height: 100%;
        width: 100%;
        margin: auto;
    }

    &__input-effects {
        height: 100%;
        width: 100%;
        position: absolute;
        border-radius: 2px;
        overflow: hidden;
        pointer-events: none;

        &::after {
            content: "";
            height: 2px;
            width: 100%;
            bottom: 0;
            left: 0;
            position: absolute;
            background-color: hsl(200, 100%, 50%);
            transform: scaleX(0);
            transition: transform 0.35s;

            #{$thisEntry}__domain-input:focus + &,
            #{$thisEntry}__domain-input:active + & {
                transform: scaleX(1);
            }
        }
    }

    &__color-treatment-button {
        display: flex;

        #{$thisEntry}[data-active-treatment="suppress"] &,
        #{$thisEntry}[data-active-treatment="screen"] & {
            display: none;
        }
    }

    &__action-container {
        display: flex;
        margin-left: auto;
    }

    &__action {
        $thisEntryAction: &;
        width: 60px;
        display: flex;
        position: relative;

        &:hover,
        &:focus,
        &:active {
            background-color: var(--color-button);
        }

        &::before {
            content: "";
            width: 1px;
            height: 45px;
            position: absolute;
            top: 50%;
            left: 0;
            transform: translateY(-50%);
            background-color: var(--color-button);

            #{$thisEntryAction}:hover + &,
            #{$thisEntryAction}:focus + &,
            #{$thisEntryAction}:active + & {
                display: none;
            }
        }

        &__icon {
            margin: auto;

            &--spotlight {
                display: none;

                #{$thisEntry}[data-active-treatment="spotlight"] & {
                    display: block;
                }
            }

            &--suppress {
                display: none;

                #{$thisEntry}[data-active-treatment="suppress"] & {
                    display: block;
                }
            }

            &--screen {
                display: none;

                #{$thisEntry}[data-active-treatment="screen"] & {
                    display: block;
                }
            }
        }
    }
}

/**
 * Styles for the Token Field provided by the TokenField library.
 *
 * @see https://github.com/KaneCohen/tokenfield
 */
.tokenfield {
    --token-item-spacing: 5px;

    // .tokenfield-set
    &-set {
        ul {
            list-style-type: none;
            margin: 0;
            padding: 0;
        }

        // .tokenfield-set-item
        &-item {
            --token-border-width: 2px;
            --token-border-radius: 3px;

            align-items: center;
            border: var(--token-border-width) solid
                var(--color-domain-token-border);
            border-radius: var(--token-border-radius);
            color: var(--color-domain-token-text);
            display: flex;
            float: left;
            font-size: 1.2rem;
            height: 24px;
            margin: var(--token-item-spacing) 0 0 var(--token-item-spacing);
            max-width: calc(100% - var(--token-item-spacing) * 2);

            &.focused {
                background-color: var(--color-domain-token-active);
            }

            .item-label {
                cursor: pointer;
                overflow: hidden;
                padding: 0 8px;
                text-overflow: ellipsis;
            }

            .item-remove {
                align-items: center;
                background-color: var(--color-domain-token-border);
                border-radius: 0 var(--token-border-radius)
                    var(--token-border-radius) 0;
                color: hsla(0, 0%, 40%, 1);
                display: flex;
                flex: 0 0 auto;
                font-size: 1.6rem;
                font-weight: 300;
                height: calc(100% + var(--token-border-width) * 2);
                justify-content: center;
                margin-right: calc(var(--token-border-width) * -1);
                text-decoration: none;
                width: 20px;

                &:hover,
                &:active,
                &:focus {
                    background-color: var(--color-domain-token-remove-active);
                    color: var(--color-domain-token-remove-text);
                }
            }
        }
    }

    // .tokenfield-input
    &-input {
        float: left;
        font-size: 1.2rem;
        min-height: calc(24px + var(--token-item-spacing) * 2);
        padding: var(--token-item-spacing);
    }
}

.action-bar {
    background-color: var(--color-button);
    display: flex;
    flex: 0 0 40px;

    // .action-bar__action
    &__action {
        border: 0;
        border-top: 1px solid var(--color-button-highlight-1);
        color: hsl(0, 0%, 100%);
        cursor: pointer;
        flex: 1 1 auto;

        &:hover,
        &:focus,
        &:active {
            background-color: var(--color-button-highlight-1);
            border-color: var(--color-button-highlight-2);
        }
    }
}

.hidden {
    display: none;
}
